{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true,
    "defaultBranch": "main"
  },
  "files": {
    "includes": ["app/**/*"],
    "ignoreUnknown": false
  },
  "css": {
    "parser": {
      "tailwindDirectives": true
    }
  },
  "overrides": [
    {
      "includes": ["prisma/seed-data/**/*"],
      "linter": {
        "rules": {
          "style": {
            "noMagicNumbers": "off"
          }
        }
      }
    },
    {
      "includes": ["app/constants/**/*"],
      "linter": {
        "rules": {
          "style": {
            "noMagicNumbers": "off"
          }
        }
      }
    },
    {
      "includes": ["app/db/**/*", "prisma/**/*"],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": "off"
          }
        }
      }
    }
  ],
  "formatter": {
    "enabled": true,
    "indentStyle": "tab"
  },
  "linter": {
    "enabled": true,
    "rules": {
      "nursery": {
        "useSortedClasses": {
          "level": "error",
          "fix": "safe",
          "options": {
            "attributes": ["className"],
            "functions": ["cn", "clsx", "twMerge"]
          }
        }
      },
      "style": {
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "conventions": [
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "formats": ["camelCase", "PascalCase", "CONSTANT_CASE"]
              },
              {
                "selector": {
                  "kind": "typeProperty"
                },
                "formats": ["camelCase", "PascalCase"]
              }
            ]
          }
        }
      },
      "suspicious": {
        "noUnknownAtRules": "off"
      }
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single"
    }
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": "on"
      }
    }
  },
  "extends": ["ultracite/core", "ultracite/remix", "ultracite/react"]
}
