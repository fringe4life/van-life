model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime?
  updatedAt     DateTime?
  role          String?
  banned        Boolean?
  banReason     String?
  banExpires    DateTime?
  firstName     String?
  lastName      String?
  phone         String?
  userInfo      UserInfo?
  Account       Account[]
  Session       Session[]

  @@map("user")
}

model Session {
  id             String    @id
  expiresAt      DateTime
  token          String    @unique
  createdAt      DateTime?
  updatedAt      DateTime?
  ipAddress      String?
  userAgent      String?
  userId         String
  impersonatedBy String?
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime?
  updatedAt             DateTime?
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
