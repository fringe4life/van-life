/** biome-ignore-all lint/correctness/noUnknownTypeSelector: is for a view transition name and perfectly legit */
/** biome-ignore-all lint/correctness/noUnknownProperty: the property exists */
@import "tailwindcss";
html {
	scrollbar-gutter: stable;
	scrollbar-width: thin;
}

@keyframes --fade-in {
	from {
		opacity: 0;
		scale: 0;
	}
	to {
		opacity: 1;
		scale: 1;
	}
}

@keyframes --scale-out {
	to {
		opacity: 0;
		scale: 0;
	}
}

@keyframes --fade-to-right {
	to {
		translate: 100vh 0;
		opacity: 0.5;
		scale: 0.5;
	}
}

@keyframes --fade-in-from-left {
	from {
		translate: -100vh 0;
		scale: 0.5;
		opacity: 0.5;
	}
	to {
		translate: 0 0;
		scale: 1;
		opacity: 1;
	}
}

@keyframes --fade-in-from-right {
	from {
		translate: 100vh 0;
		scale: 0.5;
		opacity: 0.5;
	}
	to {
		translate: 0 0;
		scale: 1;
		opacity: 1;
	}
}

@keyframes --slideInRight {
	from {
		transform: translateX(100%);
	}
	to {
		transform: translateX(0);
	}
}

@keyframes --slideOutRight {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(100%);
	}
}

@keyframes --overlayFadeIn {
	from {
		opacity: 0;
		background-color: rgba(0, 0, 0, 0);
	}
	to {
		opacity: 1;
		background-color: rgba(0, 0, 0, 0.6);
	}
}

@keyframes --overlayFadeOut {
	from {
		opacity: 1;
		background-color: rgba(0, 0, 0, 0.6);
	}
	to {
		opacity: 0;
		background-color: rgba(0, 0, 0, 0);
	}
}

/* only show view transition if no preference, the other option being:  */
/* prefers-reduced-motion: reduce */
@media screen and (prefers-reduced-motion: no-preference) {
	@view-transition {
		navigation: auto;
	}

	.mobile-sidebar {
		animation: --slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
	}
	.mobile-sidebar.out {
		animation: --slideOutRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
	}
	/* sets speed for view transitions */
	::view-transition-group(*) {
		animation-duration: 500ms;
	}

	/* only-child means there is not an after snapshot */
	/* i.e. the card is no longer on the page after being filtered out */
	::view-transition-old(*):only-child {
		animation-name: --scale-out;
	}

	/* only-child means there is not a before snapshot */
	/* i.e. the card is new to being on the page */
	::view-transition-new(*):only-child {
		animation-name: --fade-in;
	}

	::view-transition-group(image) {
		animation-duration: 250ms;
	}

	::view-transition-new(image):only-child {
		animation-name: --fade-in-from-left;
	}

	/* view transition for home page of hero section */
	::view-transition-old(image):only-child {
		animation-name: --fade-to-right;
	}

	::view-transition-new(aboutImage):only-child {
		animation-name: --fade-in-from-left;
	}

	/* view transition for home page of hero section */
	::view-transition-old(aboutImage):only-child {
		animation-name: --fade-to-right;
	}

	.scroll-sm,
	.scroll-md,
	.scroll-lg {
		animation-timeline: view();
		animation-range: entry 0% cover 25%;
	}

	.scroll-md {
		animation-range: entry 0% cover 10%;
	}

	.scroll-sm:nth-child(2n + 3) {
		animation-name: --fade-in-from-left;
	}
	.scroll-sm:nth-child(2n):nth-child(n + 3) {
		animation-name: --fade-in-from-right;
	}

	.scroll-md:nth-child(2n + 5) {
		animation-name: --fade-in-from-left;
	}
	.scroll-md:nth-child(2n):nth-child(n + 6) {
		animation-name: --fade-in-from-right;
	}

	.scroll-lg:nth-child(2n + 7) {
		animation-name: --fade-in-from-left;
	}
	.scroll-lg:nth-child(2n):nth-child(n + 8) {
		animation-name: --fade-in-from-right;
	}
}

@theme {
	--font-sans:
		"Inter", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
		"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

	--container-sm: 12rem;
	--container-md: 26rem;
	--container-lg: 36rem;

	--container-2xl: 44rem;

	--breakpoint-xs: 26rem;

	--color-orange-100: oklch(94.72% 0.041 73.17);
	--color-orange-200: oklch(91.55% 0.067 73.33);
	--color-orange-400: oklch(75.76% 0.159 55.93);
	--color-orange-600: oklch(68.11% 0.142 38.3);
	--color-neutral-600: oklch(42.02% 0 0);
	--color-neutral-900: oklch(20.02% 0 0);
}



.grid-max {
	--_gap: 32px;
	--_max-columns: 2;
	--_min-column-size: 300px;
	display: grid;
	gap: var(--_gap);
	grid-template-columns: repeat(
			auto-fit,
			minmax(
				min(
					max(
						var(--_min-column-size),
						calc(
							(100% - var(--_gap) * var(--_max-columns)) /
							var(--_max-columns)
						)
					),
					100%
				),
				1fr
			)
		);
}

/* part of josh comeaus css reset */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
	overflow-wrap: break-word;
}
/* 9. Improve line wrapping */
p {
	text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	text-wrap: balance;
}

@layer utilities {
	.no-scrollbar::-webkit-scrollbar {
		display: none;
	}
	.no-scrollbar {
		-ms-overflow-style: none; /* IE and Edge */
		scrollbar-width: none; /* Firefox */
	}
}
