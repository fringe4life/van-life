@import "tailwindcss";

/* Van state custom variants for cleaner component styling */
@custom-variant van-new (&[data-slot*="van-card-new"]);
@custom-variant van-sale (&[data-slot*="van-card-sale"]);
@custom-variant van-repair (&[data-slot*="van-card-repair"]);
@custom-variant van-available (&[data-slot*="van-card-available"]);

html {
	scrollbar-gutter: stable;
	scrollbar-width: thin;
}

@keyframes --fade-in {
	from {
		opacity: 0;
		scale: 0;
	}
	to {
		opacity: 1;
		scale: 1;
	}
}

@keyframes --scale-out {
	to {
		opacity: 0;
		scale: 0;
	}
}

@keyframes --fade-to-right {
	from {
		translate: 0 0;
		opacity: 1;
		scale: 1;
	}
	to {
		translate: 100vh 0;
		opacity: 0.5;
		scale: 0.5;
	}
}

@keyframes --fade-in-from-left {
	from {
		translate: -100vh 0;
		scale: 0.5;
		opacity: 0.5;
	}
	to {
		translate: 0 0;
		scale: 1;
		opacity: 1;
	}
}

@keyframes --fade-in-from-right {
	from {
		translate: 100vh 0;
		scale: 0.5;
		opacity: 0.5;
	}
	to {
		translate: 0 0;
		scale: 1;
		opacity: 1;
	}
}

@keyframes --slideInRight {
	from {
		transform: translateX(100%);
	}
	to {
		transform: translateX(0);
	}
}

@keyframes --slideOutRight {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(100%);
	}
}

@keyframes --overlayFadeIn {
	from {
		opacity: 0;
		background-color: rgba(0, 0, 0, 0);
	}
	to {
		opacity: 1;
		background-color: rgba(0, 0, 0, 0.6);
	}
}

@keyframes --overlayFadeOut {
	from {
		opacity: 1;
		background-color: rgba(0, 0, 0, 0.6);
	}
	to {
		opacity: 0;
		background-color: rgba(0, 0, 0, 0);
	}
}

/* only show view transition if no preference, the other option being:  */
/* prefers-reduced-motion: reduce */
/* @media screen and (prefers-reduced-motion: no-preference) { */
@view-transition {
	navigation: auto;
}

.mobile-sidebar {
	animation: --slideInRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}
.mobile-sidebar.out {
	animation: --slideOutRight 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}
/* sets speed for view transitions */
::view-transition-group(*) {
	animation-duration: 500ms;
}

/* only-child means there is not an after snapshot */
/* i.e. the card is no longer on the page after being filtered out */
::view-transition-old(*):only-child {
	animation-name: --scale-out;
}

/* only-child means there is not a before snapshot */
/* i.e. the card is new to being on the page */
::view-transition-new(*):only-child {
	animation-name: --fade-in;
}

::view-transition-group(*) {
	animation-duration: 300ms;
}

::view-transition-new(about-image):only-child {
	animation-name: --fade-in-from-left;
}

/* view transition for home page of hero section */
::view-transition-old(about-image):only-child {
	animation-name: --fade-to-right;
}

::view-transition-new(home-image):only-child {
	animation-name: --fade-in-from-left;
}

/* view transition for home page of hero section */
::view-transition-old(home-image):only-child {
	animation-name: --fade-to-right;
}
.scroll-sm,
.scroll-md,
.scroll-lg {
	animation-timeline: view();
	animation-range: entry 0% cover 25%;
}

.scroll-md {
	animation-range: entry 0% cover 10%;
}

.scroll-sm:nth-child(2n + 3) {
	animation-name: --fade-in-from-left;
}
.scroll-sm:nth-child(2n):nth-child(n + 3) {
	animation-name: --fade-in-from-right;
}

.scroll-md:nth-child(2n + 5) {
	animation-name: --fade-in-from-left;
}
.scroll-md:nth-child(2n):nth-child(n + 6) {
	animation-name: --fade-in-from-right;
}

.scroll-lg:nth-child(2n + 7) {
	animation-name: --fade-in-from-left;
}
.scroll-lg:nth-child(2n):nth-child(n + 8) {
	animation-name: --fade-in-from-right;
}
/* } */

@theme {
	--font-sans:
		"Inter", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
		"Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

	--container-sm: 12rem;
	--container-md: 26rem;
	--container-lg: 36rem;

	--container-2xl: 44rem;

	--breakpoint-xs: 26rem;

	--color-orange-100: oklch(94.72% 0.041 73.17);
	--color-orange-200: oklch(91.55% 0.067 73.33);
	--color-orange-400: oklch(75.76% 0.159 55.93);
	--color-orange-600: oklch(68.11% 0.142 38.3);
	--color-neutral-600: oklch(42.02% 0 0);
	--color-neutral-900: oklch(20.02% 0 0);

	/* Van state colors extracted from badge component - made more prominent */
	--color-van-new: oklch(30% 0 0); /* even darker gray for better visibility */
	--color-van-sale: oklch(40% 0.3 142); /* more saturated green */
	--color-van-repair: oklch(60% 0.3 85); /* more saturated yellow */

	--container-layout: min(var(--container-5xl), 100dvw);

	/* Responsive padding inline - updates automatically */
	--padding-inline: 1rem; /* Mobile default */

	/* Host layout max-width calculation - eliminates redundancy */
	--host-layout-max-width: calc(
		var(--container-layout) -
		(2 * var(--padding-inline))
	);

	--mobile-menu-width: min(100dvw, 25rem);

	/* Chart dimensions */
	--chart-height: 350px;

	/* Chart text area components - aliases for Tailwind spacing scale */
	--chart-text-top-margin: var(--spacing-4); /* mt-4 = 1rem = 16px */
	--chart-text-first-height: var(--spacing-4); /* h-4 = 1rem = 16px */
	--chart-text-gap: var(--spacing-2); /* mb-2 = 0.5rem = 8px */
	--chart-text-second-height: var(--spacing-3); /* h-3 = 0.75rem = 12px */

	/* Total text area height (16 + 16 + 8 + 12 = 52px) */
	--chart-text-height: calc(
		var(--chart-text-top-margin) +
		var(--chart-text-first-height) +
		var(--chart-text-gap) +
		var(--chart-text-second-height)
	);

	--chart-content-height: calc(var(--chart-height) - var(--chart-text-height));
}

/* Responsive padding updates */
@media (min-width: 768px) {
	:root {
		--padding-inline: 3rem; /* Desktop padding */
	}
}

/* Custom variants for van state styling */

@utility grid-max {
	--_gap: 2rem;
	--_max-columns: 2;
	--_min-column-size: 300px;
	display: grid;
	gap: var(--_gap);
	grid-template-columns: repeat(
			auto-fit,
			minmax(
				min(
					max(
						var(--_min-column-size),
						calc(
							(100% - var(--_gap) * var(--_max-columns)) /
							var(--_max-columns)
						)
					),
					100%
				),
				1fr
			)
		);
}

/* part of josh comeaus css reset */
@layer base {
	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		overflow-wrap: break-word;
	}
	/* 9. Improve line wrapping */
	p {
		text-wrap: pretty;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		text-wrap: balance;
	}
}

/* Custom utility for pseudo-random bar heights using CSS trig functions */
@utility bar-height {
	height: clamp(
		50px,
		calc(150px + 100px * sin((pi / 2) * var(--bar-index))),
		var(--chart-content-height)
	);
}

@layer utilities {
	.no-scrollbar::-webkit-scrollbar {
		display: none;
	}
	.no-scrollbar {
		-ms-overflow-style: none; /* IE and Edge */
		scrollbar-width: none; /* Firefox */
	}
}
